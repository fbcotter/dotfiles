[MASTER]

# Python code to execute, usually for sys.path manipulation such as pygtk.require().
init-hook='import sys; sys.setrecursionlimit(8 * sys.getrecursionlimit())'

# Files or directories to be skipped. They should be base names, not paths.
ignore=protos

# Pickle collected data for later comparisons.
persistent=n

# List of plugins (as comma separated values of python modules names) to load, usually to register additional checkers.
load-plugins=

# Loading all extensions can cause segmentation faults, please use `extension-pkg-allow-list` below instead
unsafe-load-any-extension=no

# A comma-separated list of package or module names from where C extensions may be loaded.
# apache_beam and pyarrow are known to cause segfaults: instead, disable pylint on lines where this is an issue.
extension-pkg-allow-list=
    cv2,
    google.protobuf,
    mypy,
    pydantic,
    ujson,
    wayve,

[MESSAGES CONTROL]

# Enable the message, report, category or checker with the given id(). You can either give multiple identifier
# separated by comma (,) or put this option multiple time. See also the "--disable" option for examples.
enable=W # Warnings

# Disable the message, report, category or checker with the given id(s).
disable=
    # https://pylint.readthedocs.io/en/latest/faq.html#i-am-using-another-popular-linter-alongside-pylint-which-messages-should-i-disable-to-avoid-duplicates
    arguments-differ, # causes false positives, was widely disabled
    arguments-renamed,
    bad-indentation,       # redundant via flake8 (pycodestyle)
    bare-except,           # redundant via flake8 (pycodestyle)
    consider-iterating-dictionary,
    consider-using-dict-items,
    consider-using-f-string,
    consider-using-from-import,
    consider-using-generator,
    consider-using-in,
    consider-using-sys-exit,
    consider-using-with,
    disallowed-name,       # re-enable when/if we want to use non-default bad-name(-rgxs) and good-names
    duplicate-code,
    f-string-without-interpolation,
    file-ignored,
    fixme,
    import-outside-toplevel,
    inherit-non-class,
    invalid-bool-returned,
    invalid-bytes-returned,
    invalid-format-returned,
    invalid-getnewargs-ex-returned,
    invalid-getnewargs-returned,
    invalid-hash-returned,
    invalid-index-returned,
    invalid-length-hint-returned,
    invalid-name, # was disabled >100 times
    invalid-overridden-method,
    invalid-repr-returned,
    invalid-str-returned,
    isinstance-second-argument-not-valid-type,
    len-as-condition,
    line-too-long,         # redundant via flake8 (pycodestyle)
    locally-disabled,
    logging-format-interpolation,
    missing-docstring,
    missing-final-newline, # redundant via flake8 (pycodestyle)
    multiple-statements,   # redundant via flake8 (pycodestyle)
    no-member,             # only because it can't cope with our dataclasses
    not-callable,          # only because https://github.com/pytorch/pytorch/issues/24807
    raise-missing-from,
    relative-beyond-top-level,
    signature-differs,
    singleton-comparison,  # redundant via flake8 (pycodestyle E711)
    subprocess-run-check,
    super-with-arguments,
    too-few-public-methods,
    too-many-ancestors,
    too-many-branches,     # redundant via flake8 (mccabe)
    too-many-instance-attributes,
    trailing-whitespace,   # redundant via flake8 (pycodestyle)
    undefined-variable,    # redundant via flake8 (pyflakes)
    unidiomatic-typecheck,
    ungrouped-imports,     # redundant via isort
    unspecified-encoding,
    unsubscriptable-object, # false positives
    unnecessary-comprehension,
    unnecessary-dunder-call,
    unnecessary-lambda-assignment,
    unnecessary-pass,      # because it trips up on reasonable-looking code (e.g., method with just a docstring and a `pass`)
    unnecessary-semicolon, # redundant via flake8 (pycodestyle)
    unneeded-not,          # redundant via flake8 (pycodestyle)
    unused-import,         # redundant via flake8 (pyflakes)
    unused-variable,       # redundant via flake8 (pyflakes)
    use-dict-literal,
    use-list-literal,
    use-maxsplit-arg,
    use-sequence-for-iteration,
    wrong-import-order,    # redundant via isort
    wrong-import-position, # redundant via flake8 (pycodestyle)
    wrong-spelling-in-comment,   # performance issue: https://github.com/PyCQA/pylint/issues/2249
    wrong-spelling-in-docstring, # performance issue: https://github.com/PyCQA/pylint/issues/2249

[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs (visual studio) and html.
# You can also give a reporter class, eg mypackage.mymodule.MyReporterClass.
output-format=text

# Tells whether to display a full report or only the messages
reports=no

# Evaluation score.
score=no

# Template used to display messages. This is a python new-style format string used to format the message information.
# See doc for all details
msg-template={path}:{line}: [{msg_id}({symbol}), {obj}] {msg}

[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A mixin class is detected if its name ends
# with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of classes names for which member attributes should not be checked (useful for classes with attributes
# dynamically set).
ignored-classes=

# List of members which are set dynamically and missed by pylint inference system, and so shouldn't trigger E0201 when
# accessed. Python regular expressions are accepted.
generated-members=

[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO

[BASIC]

# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match correct module level names
const-rgx=(([a-zA-Z_][a-zA-Z0-9_]*)|(__.*__))$

# Regular expression which should only match correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+(T_(co|contra))?$

# Regular expression which should only match correct function names
function-rgx=[a-z_][a-z0-9_]{3,60}$

# Regular expression which should only match correct method names
method-rgx=[a-z_][a-z0-9_]{2,40}|[a-z]{2,20}_[T|R]_[a-z]{3,20}$

# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][a-z0-9_]{2,40}$

# Regular expression which should only match correct argument names
argument-rgx=[a-z_]([a-z0-9_]{2,40}|[a-z0-9]{2,20}_[T|R]_[a-z0-9_]{3,20})$

# Regular expression which should only match correct variable names
# Special-case support for foo_T_bar style names
variable-rgx=[a-z_]([a-z0-9_]{2,40}|[a-z0-9]{2,20}_[T|R]_[a-z0-9_]{3,20})$

# Regular expression which should only match correct attribute names in class bodies
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,40}|[A-Z][A-Z_]{1,40}|(__.*__)|[a-z]{2,20}_[T|R]_[a-z0-9_]{3,20})$

# Regular expression which should only match correct list comprehension / generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,f,ex,Run,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,baz,toto,tutu,tata

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=__.*__

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=-1

[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=6

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=yes

[FORMAT]

# Maximum number of characters on a single line.
max-line-length=120

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Allow the body of an if to be on the same line as the test if there is no else.
single-line-if-stmt=no

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1 tab).
indent-string='    '

[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the beginning of the name of dummy variables (i.e. not used).
dummy-variables-rgx=_$|dummy|__$

# List of additional names supposed to be defined in builtins. Remember that you should avoid to define new builtins
# when possible.
additional-builtins=

[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the given file (report RP0402 must not be
# disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must not be disabled)
int-import-graph=

[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs

[DESIGN]

# Maximum number of arguments for function / method
max-args=30

# Argument names that match this expression will be ignored. Default to name with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=30

# Maximum number of return / yield for function / method body
max-returns=10

# Maximum number of branch for function / method body
max-branches=20

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=20

# Maximum number of attributes for a class (see R0902).
max-attributes=30

# Minimum number of public methods for a class (see R0903).
min-public-methods=1

# Maximum number of public methods for a class (see R0904).
max-public-methods=100

[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to "Exception"
overgeneral-exceptions=Exception
